function obj = addStateVariable(obj, phase, model)
    % Adds state variables as the NLP decision variables to the problem
    %
    % Parameters:
    % phase: the index of the phase (domain) @type integer
    % model: the rigid body model of the robot @type RigidBodyModel
    
    num_node = obj.Phase{phase}.NumNode;
    col_names = obj.Phase{phase}.OptVarTable.Properties.VariableNames;
    
    % state variables are defined at all collocation nodes
    nodeList = 1:1:num_node;
    
    
    q = create_object_array('NlpVariable', num_node, nodeList, ...
        'Name', 'q', 'Dimension', model.nDof, ...
        'lb', [model.Dof.lower]', ...
        'ub', [model.Dof.upper]');
    % joint velocity (dq)
    dq = create_object_array('NlpVariable', num_node, nodeList, ...
        'Name', 'dq', 'Dimension', model.nDof, ...
        'lb', -[model.Dof.velocity]', ...
        'ub', [model.Dof.velocity]');
    % joint acceleration (ddq)
    ddq = create_object_array('NlpVariable', num_node, nodeList, ...
        'Name', 'ddq', 'Dimension', model.nDof, ...
        'lb', -1e4, ...
        'ub', 1e4);
    
    % add to the decision variable table
    obj.Phase{phase}.OptVarTable = [...
        obj.Phase{phase}.OptVarTable;...
        array2table(q,'VariableNames',col_names,'RowNames',{'q'});...
        array2table(dq,'VariableNames',col_names,'RowNames',{'dq'});...
        array2table(ddq,'VariableNames',col_names,'RowNames',{'ddq'})];


end